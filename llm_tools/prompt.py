COUNT_NAMES_PROMPT = """
你是一个优秀仔细的历史学家，下面是{file_name}的内容，请你帮我总结出在这些内容中出现了一些什么人名，他们的身份职位分别是什么，请以json格式返回给我，方便我之后使用代码对这些人名在文件内容中出现的频次进行统计分析。
请注意：
1. 在内容中，可能含有多个代词指代一个人名，你需要用name_1, name_2, name_3等字段来表示这些代词指代的人名。可以参考下面示例中的第一个键值对。
2. 在文言文中，有可能会只使用一个人的姓或者名来指代这个人，你需要根据上下文来判断这个人的全名。可以参考下面示例中的第二个键值对。
3. 如果内容中未出现只使用一个人的姓或者名来指代这个人，那么只需要返回name_1字段即可。
4. 当内容中同时出现“陈余”与“成安君陈余”时，你只需要返回“陈余”这个字段，不需要返回“成安君陈余”这个字段。因为在统计“陈余”的时候顺便也统计了“成安君陈余”。
5. 当内容中出现“陈余”与“成安君余”时，你需要同时返回这两个字段，因为在统计“陈余”的时候统计不到“成安君余”。

你可以参考如下json返回格式：
[
    {{
        "name_1": "太祖高皇帝",
        "name_2": "沛公",
        "name_3": "刘邦",
        "position": "皇帝"
    }},
    {{
        "name_1": "项羽",
        "name_2": "羽",
        "position": "西楚霸王"
    }},
    {{
        "name_1": "卫绾",
        "position": "丞相"
    }}
]

好的，现在开始！

内容：
{content}

输出：(请只要输出json内容，其他一概不要输出)
"""


COUNT_BACKGROUND_PROMPT = """
你是一个历史学家，下面是{file_name}的内容，请你帮我总结出在这些内容中出现的人物{name_list}，他们的的背景信息（任职皇帝时期，任职年份，能力大小，功绩等）和死亡状况（是否是非正常死亡，死亡原因）是什么，请如下示例的json格式返回给我。你可以根据这个内容进行总结，如果这个内容中没有出现，请你根据你自己的知识进行总结。

你可以参考如下json返回格式：
    {{
        "name": "萧何",
        "title": "丞相",
        "emperor": "汉高帝",
        "service_years": "前202年-前193年",
        "abilities": "政治才能极高",
        "achievements": "帮助刘邦统一天下，建立汉朝政权架构",
        "death_status": {{
            "normal_death": true,
            "cause": "自然死亡"
        }}
    }},
    {{
        "name": "周勃",
        "title": "丞相",
        "emperor": "汉景帝",
        "service_years": "前180年-前169年",
        "abilities": "军事、政治双全",
        "achievements": "平定吕后政变，恢复汉室威信",
        "death_status": {{
            "normal_death": false,
            "cause": "被迫自杀"
        }}
    }}

好的，现在开始！

内容：
{content}

输出：(请只要输出json内容，其他一概不要输出)
"""